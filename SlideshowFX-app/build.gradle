version = '@@NEXT-VERSION@@'

dependencies {
    compile project(':SlideshowFX-engines')
    compile project(':SlideshowFX-global-configuration')
    compile project(':SlideshowFX-icons')
    compile project(':SlideshowFX-plugin')
    compile project(':SlideshowFX-osgi')
    compile project(":SlideshowFX-server")
    compile project(':SlideshowFX-utils')

    compile project(':SlideshowFX-content-extension')
    compile project(':SlideshowFX-hosting-connector')
    compile project(':SlideshowFX-markup')
    compile project(':SlideshowFX-snippet-executor')

    compile "org.asciidoctor:asciidoctorj:$asciidoctorjVersion"
    compile "org.apache.felix:org.apache.felix.framework:$felixVersion"
    compile "com.google.zxing:core:$zxingVersion", "com.google.zxing:javase:$zxingVersion"

    testCompile "junit:junit:$junitVersion"
    testCompile "org.mockito:mockito-core:$mockitoVersion"
}

jar {
    manifest {
        attributes("Implementation-Title": "SlideshowFX",
                   "Implementation-Version": version,
                   "Implementation-Vendor": "Thierry Wasylczenko",
                   "JavaFX-Preloader-Class": "com.twasyl.slideshowfx.app.SlideshowFXPreloader",
                   "Main-Class": "com.twasyl.slideshowfx.app.SlideshowFX",
                   "JavaFX-Version": "8.0+",
                   "Class-Path": configurations.compile.collect { it.getName() }.join(' '))
    }
}

test {
    workingDir = rootDir
    jvmArgs "-DtestResultsDir=${testResultsDir.absolutePath}"
}

javafx {
    bundleBaseName = "SlideshowFX"
    antBuild = file("${rootDir.absolutePath}/src/main/resources/javafx/${project.name}.xml")
    bundleResources.put('.', files(project.jar, project.configurations.compile))
}

tasks.bintrayUpload.enabled = false