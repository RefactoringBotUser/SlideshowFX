description = 'Extension allowing to insert alerts inside a SlideshowFX presentation'
version = '1.3-SNAPSHOT'

apply plugin: 'java-library'

dependencies {
    api project(':slideshowfx-content-extension')
    implementation project(':slideshowfx-icons')
    api project(':slideshowfx-markup')
    api project(':slideshowfx-plugin')
    api project(':slideshowfx-ui-controls')

    testCompile "org.mockito:mockito-core:${rootProject.ext.dependencies.mockito.version}"
}

ext.isPlugin = true
ext.isContentExtension = true
ext.bundle = [
        name               : 'SlideshowFX alert extension',
        symbolicName       : 'com.twasyl.slideshowfx.content.extension.alert',
        description        : 'Support for inserting alert in slides',
        activator          : 'com.twasyl.slideshowfx.content.extension.alert.activator.AlertContentExtensionActivator',
        exportPackage      : 'com.twasyl.slideshowfx.content.extension.alert.controllers,com.twasyl.slideshowfx.content.extension.alert,com.twasyl.slideshowfx.content.extension.alert.activator',
        setupWizardLabel   : 'Alert',
        setupWizardIconName: 'EXCLAMATION_TRIANGLE'
]

task createSweetAlertPackage() {
    doLast {
        def sweetAlertVersion = project.findProperty('sweetAlertVersion') ?: ''
        def binaryDir = new File("${buildDir}/tmp/sweetalert-update")
        def newPackageDir = new File("${binaryDir}/sweetalert", sweetAlertVersion)
        def binary = new File(newPackageDir, "sweetalert.min.js")

        if (!binaryDir.exists()) {
            binaryDir.mkdirs()
        }

        if (!newPackageDir.exists()) {
            newPackageDir.mkdirs()
        }

        new URL("https://unpkg.com/sweetalert@${sweetAlertVersion}/dist/sweetalert.min.js").withInputStream { i ->
            binary.withOutputStream {
                it << i
            }
        }
    }
}

task zipSweetAlertPackage(type: Zip) {
    archiveName = "sweetalert.zip"
    destinationDir = file("${buildDir}/tmp")
    from("${buildDir}/tmp/sweetalert-update/sweetalert") {
        into "sweetalert"
    }
}

createSweetAlertPackage.finalizedBy zipSweetAlertPackage